import t from"isomorphic-unfetch";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])}return t},e.apply(this,arguments)}class s{constructor(t){this.authToken=void 0,this.baseUrl=void 0,this.authToken=t.authToken,this.baseUrl=t.baseUrl||"https://jsonplaceholder.typicode.com"}request(s,r){const o=`${this.baseUrl}${s}`,n=e({},r,{headers:{"Content-Type":"application/json","api-key":this.authToken}});return t(o,n).then(t=>{if(t.ok)return t.json();throw new Error(t.statusText)})}}const r="photos";class o extends s{getById(t){return this.request(`/${r}/${t}`)}getAll(){return this.request(`/${r}`)}save(t){return this.request(`/${r}`,{method:"POST",body:JSON.stringify(t)})}}const n="comments";class i extends s{getById(t){return this.request(`/${n}/${t}`)}getAll(){return this.request(`/${n}`)}save(t){return this.request(`/${n}`,{method:"POST",body:JSON.stringify(t)})}}class h{constructor(t){this.photos=void 0,this.comments=void 0,this.photos=new o(t),this.comments=new i(t)}}export{h as SDKApplication};
